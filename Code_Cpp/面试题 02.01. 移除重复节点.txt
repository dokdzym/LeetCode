/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode* removeDuplicateNodes(ListNode* head) {
        unordered_map<int, bool> hash;
        ListNode* res = head;
        ListNode* pre = nullptr;
        while(head){
            if(hash[head -> val]){
                cout << "repeat:"<< head -> val <<endl;
                pre -> next = head -> next;
            }else{
                pre = head;
            }
            hash[head -> val] = true;
            head = head -> next;
        }
        return res;
    }
};