class Solution {
public:
    vector<vector<int>> res;
    vector<vector<int>> combinationSum2(vector<int>& candidates, int target) {
        vector<int> track;
        sort(candidates.begin(), candidates.end());
        backtrack(candidates, 0, target, track);
        return res;
    }
    void backtrack(vector<int>& candidates, int start, int target, vector<int>& track){
        if(target == 0){
            res.push_back(track);
            return ;
        }
        for(int i = start; i < candidates.size() && target >= candidates[i]; ++ i){
            if(i != start && candidates[i] == candidates[i - 1]) continue;
            track.push_back(candidates[i]);
            backtrack(candidates, i + 1, target - candidates[i], track);
            track.pop_back();
        }
    }
};