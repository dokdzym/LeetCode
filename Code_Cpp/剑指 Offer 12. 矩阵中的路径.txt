class Solution {
public:
    bool exist(vector<vector<char>>& board, string word) {
        int row = board.size();
        if(row == 0) return false;
        int col = board[0].size();
        for(int i = 0; i < row; ++ i)
            for(int j = 0; j < col; ++ j)
                if(helper(board, word, i, j, 0))
                    return true;
        return false;
    }
    bool helper(vector<vector<char>>& board, const string& word, int i, int j, int index){
        if(index == word.size()) return true;
        if(i >= board.size() || j >= board[0].size() || i < 0 || j < 0 || 
            board[i][j] != word[index]) return false;
        char tmp = board[i][j];
        board[i][j] = '!';
        bool res = helper(board, word, i - 1, j, index + 1) ||
               helper(board, word, i + 1, j, index + 1) ||
               helper(board, word, i, j + 1, index + 1) ||
               helper(board, word, i, j - 1, index + 1);
        board[i][j] = tmp;
        return res;
    }
};