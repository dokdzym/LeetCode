class Solution {
    bool ans = true;
    int maxDepth(TreeNode* root) {
        if(root == NULL) return 0;
        int left = maxDepth(root->left);
        int right = maxDepth(root->right);
        if(abs(left - right) > 1) 
            ans = false;
        return max(left, right) + 1;
    }
public:
    bool isBalanced(TreeNode* root) {
        if(root == NULL) return true;
        maxDepth(root);
        return ans;
    }
};


//2另一种复杂度不太好的方法
class Solution {
    int maxDepth(TreeNode* root) {
        if(root == NULL) return 0;
        return max(maxDepth(root->left), maxDepth(root->right)) + 1;
    }
public:
    bool isBalanced(TreeNode* root) {
        if(root == NULL) return true;
        if(abs(maxDepth(root->left) - maxDepth(root->right)) > 1) return false;
        return isBalanced(root->left) && isBalanced(root->right);
    }
};