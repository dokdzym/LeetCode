class Solution {
public:
    char nextGreatestLetter(vector<char>& letters, char target) {
        int len = letters.size();
        if(letters[len - 1] <= target)
            return letters[0];
        //以下情况，均能在一遍循环里找到结果

        int l(0), r(len - 1);

        unordered_map<int, int> hash;
        while(l <= r){//找到target元素后往右找第一个不是target的，用map记录是否遍历过
            int m = (l + r) >> 1;
            if(hash[m] || letters[m] == target){//已经遍历过该点，直接往后查找
                int index = m;
                while(index <= len - 1 && letters[index] <= target){
                    ++ index;
                }
                return letters[index];
            }else{
                if(letters[m] < target){
                    l = m;
                }else{
                    r = m;
                }
            }
            hash[m] = 1;
        }
        return '1';
    }
};